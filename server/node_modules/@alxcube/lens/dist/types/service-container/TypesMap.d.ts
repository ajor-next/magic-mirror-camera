import type { ColorInterpolatorFactory } from "../color-interpolator";
import type { ColorStringParser, ColorStringParsersPool } from "../color-string-parser";
import type { DistortionProcessorFactory, DistortionController, DistortionService } from "../distortion-processing";
import type { OutputViewportResolver, OutputViewportStrategiesPool } from "../output-viewport-strategy";
import type { VirtualPixelDecoratorApplicator } from "../pixel-accessor";
import type { ReversePixelMapperFactoriesPool, ReversePixelMapperResolver } from "../pixel-mapper";
import type { ResampleFilterResolver, ResampleFilterFactory, ResampleFilterPresetsPool } from "../resample-filter";
import type { ColorResamplerFactoriesPool, ColorResamplerResolver } from "../color-resampler";
import type { WeightingFunctionFactoriesPool } from "../weighting-function";
import type { ImageAdapterFactoriesPool, ImageAdapterResolver } from "../image-adapter";
/**
 * Lens library types map.
 */
export interface TypesMap {
    DistortionProcessorFactory: DistortionProcessorFactory;
    DistortionController: DistortionController;
    DistortionService: DistortionService;
    OutputViewportResolver: OutputViewportResolver;
    OutputViewportStrategiesPool: OutputViewportStrategiesPool;
    ReversePixelMapperFactoriesPool: ReversePixelMapperFactoriesPool;
    ReversePixelMapperResolver: ReversePixelMapperResolver;
    ResampleFilterFactory: ResampleFilterFactory;
    ResampleFilterPresetsPool: ResampleFilterPresetsPool;
    ResampleFilterResolver: ResampleFilterResolver;
    ColorResamplerFactoriesPool: ColorResamplerFactoriesPool;
    ColorResamplerResolver: ColorResamplerResolver;
    WeightingFunctionFactoriesPool: WeightingFunctionFactoriesPool;
    ImageAdapterFactoriesPool: ImageAdapterFactoriesPool;
    ImageAdapterResolver: ImageAdapterResolver;
    ColorStringParsersPool: ColorStringParsersPool;
    ColorStringParser: ColorStringParser;
    ColorInterpolatorFactory: ColorInterpolatorFactory;
    VirtualPixelDecoratorApplicator: VirtualPixelDecoratorApplicator;
}
