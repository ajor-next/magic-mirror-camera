import type { HasAverageColor, HasBackgroundColor, VirtualViewportPixelAccessor } from "../pixel-accessor";
import type { ColorResampler } from "./ColorResampler";
import type { ReversePixelMapper } from "../pixel-mapper";
import type { ResampleFilterPresetsPoolKeyMap, ResampleFilter, ResampleFilterPreset, ResampleFilterResolverOptions } from "../resample-filter";
import type { Color } from "../types";
import type { ColorResamplerFactoriesPoolKeyMap } from "./ColorResamplerFactoriesPool";
import type { ColorResamplerFactoryOptions } from "./ColorResamplerFactory";
/**
 * ColorResamplerResolver options.
 */
export interface ColorResamplerResolverOptions extends ResampleFilterResolverOptions, Omit<ColorResamplerFactoryOptions, "resampleFilter"> {
    /**
     * Resample filter. Can be filter preset name (member of FilterName enum), filter preset or ResampleFilter instance.
     */
    filter?: keyof ResampleFilterPresetsPoolKeyMap | ResampleFilterPreset | ResampleFilter;
    /**
     * Matte color. Used for invalid pixel mappings, for which no real color can be calculated from source image.
     * @default [0, 0, 0, 0]
     */
    matteColor?: Color;
    /**
     * Preferred resampler name.
     */
    preferredResampler?: keyof ColorResamplerFactoriesPoolKeyMap | string;
}
/**
 * Interface for resolving appropriate color resampler for given image and reverse pixel mapper.
 */
export interface ColorResamplerResolver {
    /**
     * Resolves color resampler for given image, reverse pixel mapper and options.
     *
     * @param image
     * @param reversePixelMapper
     * @param options
     */
    resolve(image: VirtualViewportPixelAccessor & HasBackgroundColor & HasAverageColor, reversePixelMapper: ReversePixelMapper, options?: ColorResamplerResolverOptions): ColorResampler;
}
