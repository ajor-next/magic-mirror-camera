import { InterpolationMethod } from "../color-interpolator";
import { type HasAverageColor, type HasBackgroundColor, type VirtualPixelMethod, type VirtualViewportPixelAccessor } from "../pixel-accessor";
import type { ColorResampler } from "./ColorResampler";
import type { Color } from "../types";
import type { ResampleFilter } from "../resample-filter";
import type { ReversePixelMapper } from "../pixel-mapper";
/**
 * ColorResamplerFactory options.
 */
export interface ColorResamplerFactoryOptions {
    /**
     * Virtual pixel method.
     * @default VirtualPixelMethod.TRANSPARENT
     */
    virtualPixelMethod?: VirtualPixelMethod;
    /**
     * Interpolation method.
     * @default InterpolationMethod.AVERAGE
     */
    interpolationMethod?: InterpolationMethod;
    /**
     * Matte color. Used for invalid pixel mappings, for which no real color can be calculated from source image.
     * @default [0, 0, 0, 0]
     */
    matteColor?: Color;
    /**
     * Resample filter.
     */
    resampleFilter?: ResampleFilter;
}
/**
 * ColorResampler factory interface.
 */
export interface ColorResamplerFactory {
    /**
     * Flag of Elliptical Weighted Average support of produced ColorResampler.
     */
    readonly supportsEwa: boolean;
    /**
     * Flag of resample filter requirement for current factory.
     */
    readonly requiresResampleFilter: boolean;
    /**
     * Creates ColorResampler instance.
     *
     * @param image
     * @param reversePixelMapper
     * @param options
     */
    create(image: VirtualViewportPixelAccessor & HasBackgroundColor & HasAverageColor, reversePixelMapper: ReversePixelMapper, options: ColorResamplerFactoryOptions): ColorResampler;
}
