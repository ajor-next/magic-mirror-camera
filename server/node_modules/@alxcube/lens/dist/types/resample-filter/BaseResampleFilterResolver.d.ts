import type { ResampleFilterResolver, ResampleFilterResolverOptions } from "./ResampleFilterResolver";
import type { ResampleFilterPresetsPool, ResampleFilterPresetsPoolKeyMap } from "./ResampleFilterPresetsPool";
import type { ResampleFilterPreset } from "./ResampleFilterPreset";
import type { ResampleFilter } from "./ResampleFilter";
import type { ResampleFilterFactory } from "./ResampleFilterFactory";
/**
 * Base implementation of ResampleFilterResolver interface.
 */
export declare class BaseResampleFilterResolver implements ResampleFilterResolver {
    private readonly filterPresetsPool;
    private readonly filterFactory;
    /**
     * BaseResampleFilterResolver constructor.
     *
     * @param filterPresetsPool
     * @param filterFactory
     */
    constructor(filterPresetsPool: ResampleFilterPresetsPool, filterFactory: ResampleFilterFactory);
    /**
     * @inheritDoc
     */
    resolve(filter: keyof ResampleFilterPresetsPoolKeyMap | ResampleFilterPreset | ResampleFilter, options?: ResampleFilterResolverOptions): ResampleFilter;
}
