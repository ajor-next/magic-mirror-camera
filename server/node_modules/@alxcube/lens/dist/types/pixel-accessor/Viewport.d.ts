/**
 * Virtual viewport class.
 * Represents image's virtual position at its coordinate space.
 *
 * @see https://www.imagemagick.org/Usage/basics/#page Virtual canvas offset at ImageMagick docs.
 */
export declare class Viewport {
    /**
     * Left edge coordinate of viewport.
     */
    x1: number;
    /**
     * Top edge coordinate of viewport.
     */
    y1: number;
    /**
     * Right edge coordinate of viewport.
     */
    x2: number;
    /**
     * Bottom edge coordinate of viewport.
     */
    y2: number;
    /**
     * Viewport constructor.
     *
     * @param x1 Left edge coordinate of viewport.
     * @param y1 Top edge coordinate  of viewport.
     * @param x2 Right edge coordinate of viewport.
     * @param y2 Bottom edge coordinate of viewport.
     */
    constructor(x1: number, y1: number, x2: number, y2: number);
    /**
     * Creates Viewport instance from viewport literal.
     *
     * @param obj
     */
    static fromLiteral(obj: ViewportLiteral): Viewport;
    /**
     * Returns virtual viewport width -- same as image actual width.
     */
    getWidth(): number;
    /**
     * Returns virtual viewport height -- same as image actual height.
     */
    getHeight(): number;
    /**
     * Returns viewport area.
     */
    getArea(): number;
    /**
     * Expands viewport to contain given coords.
     *
     * @param x X-coordinate.
     * @param y Y-coordinate.
     */
    expand(x: number, y: number): this;
    /**
     * Clones viewport into new instance.
     *
     * @returns New Viewport instance with same dimensions.
     */
    clone(): Viewport;
    /**
     * Fix bounds after best fit viewport calculation.
     */
    fixBounds(): this;
    /**
     * Scales viewport bounds.
     *
     * @param scale Scale value.
     */
    scale(scale: number): this;
    /**
     * Resets viewport offset.
     */
    reset(): this;
    /**
     * Sets viewport offset.
     *
     * @param x X-offset.
     * @param y Y-offset.
     */
    offset(x: number, y: number): this;
}
/**
 * Plain object, describing image viewport.
 */
export type ViewportLiteral = {
    x1: number;
    y1: number;
    x2: number;
    y2: number;
} | {
    width: number;
    height: number;
    x?: number;
    y?: number;
};
/**
 * Checks if passed object implements ViewportLiteral interface.
 *
 * @param obj
 */
export declare function isViewportLiteral(obj: unknown): obj is ViewportLiteral;
