import type { Point } from "../types";
/**
 * Reverse pixel mapper interface.
 */
export interface ReversePixelMapper {
    /**
     * Maps destination image coordinates into source image coordinates.
     *
     * @param x Result image X coordinate.
     * @param y Result image Y coordinate.
     */
    reverseMap(x: number, y: number): Point;
    /**
     * Returns number that represents how mathematically valid is mapping. If validity is < 0 -- the mapping is invalid.
     * When mapping is invalid, matte color will be used. When validity is between 0 and 1, blended color of matte color
     * and resampled color will be used.
     *
     * @param x
     * @param y
     * @param scaling
     */
    getValidity(x: number, y: number, scaling: number): number;
}
/**
 * Checks if passed object implements ReversePixelMapper interface.
 *
 * @param obj
 */
export declare function isReversePixelMapper(obj: unknown): obj is ReversePixelMapper;
