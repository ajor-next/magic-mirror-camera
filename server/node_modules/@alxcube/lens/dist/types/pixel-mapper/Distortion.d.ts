/**
 * Names of built-in distortions.
 */
export declare enum Distortion {
    /**
     * Affine distortion using control points. Arguments are sets of control points mappings:
     * [u0, v0, x0, y0, ..., uN, vN, xN, yN], where u*, v* are source image coords, x*, y* are destination image coords.
     */
    AFFINE = "Affine",
    /**
     * Affine distortion using forward affine matrix. Arguments are affine matrix coefficients: [sx, ry, rx, sy, tx, ty].
     * *IMPORTANT NOTE: Arguments order differs from Affine.fromForwardMatrix arguments order which is
     * [sx, rx, tx, ry, sy, ty]*
     */
    AFFINE_PROJECTION = "AffineProjection",
    /**
     * Perspective distortion using control points. Arguments are sets of control points mappings:
     * [u0, v0, x0, y0, ..., uN, vN, xN, yN], where u*, v* are source image coords, x*, y* are destination image coords.
     */
    PERSPECTIVE = "Perspective",
    /**
     * Perspective distortion using forward perspective matrix.
     * Arguments are perspective matrix coefficients: [sx, ry, tx, rx, sy, ty, px, py].
     */
    PERSPECTIVE_PROJECTION = "PerspectiveProjection",
    /**
     * Arc distortion. Arguments are: [arcAngle, rotation, outerRadius, innerRadius].
     * All arguments except arcAngle are optional.
     */
    ARC = "Arc",
    /**
     * Polynomial distortion. Arguments: [order, u0, v0, x0, y0, ..., uN, vN, xN, yN].
     * First argument is polynomial order, rest arguments are control points.
     */
    POLYNOMIAL = "Polynomial"
}
