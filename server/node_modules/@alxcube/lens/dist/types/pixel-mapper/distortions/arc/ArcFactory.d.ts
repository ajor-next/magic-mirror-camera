import { Viewport } from "../../../pixel-accessor";
import { Arc } from "./Arc";
import type { ReversePixelMapperFactory } from "../../ReversePixelMapperFactory";
/**
 * Arc distortion arguments.
 */
export type ArcDistortionArgs = [number, number, number, number] | [number, number, number] | [number, number] | [number];
/**
 * Creates arc distortion class from arguments.
 *
 * Arguments:  **[angle, rotation, outer_radius, inner_radius]**
 * All but first argument are optional.
 *
 * By default, if the radii arguments are nor provided the image radius
 * is calculated so the horizontal center-line is fits the given arc
 * without scaling.
 *
 * The output image size is ALWAYS adjusted to contain the whole image,
 * and an offset is given to position image relative to the 0,0 point of
 * the origin, allowing users to use relative positioning onto larger
 * background.
 *
 * The arguments are converted to distortion coefficients.
 *
 *
 * @see https://imagemagick.org/api/MagickCore/distort_8c_source.html#l01095 Generating coefficients for arc
 * distortion at ImageMagick source.
 */
export declare class ArcFactory implements ReversePixelMapperFactory<ArcDistortionArgs> {
    /**
     * Creates Arc instance.
     *
     * @param args Arguments:
     * * 0: **angle** - The angle over which to arc the image side-to-side.
     * * 1: **rotation** - Angle to rotate image from vertical center.
     * * 2: **outer_radius** - Set top edge of source image at this radius.
     * * 3: **inner_radius** - Set bottom edge to this radius (radial scaling).
     * @param viewport Source image viewport.
     */
    create(args: ArcDistortionArgs, viewport: Viewport): Arc;
}
