import { Viewport } from "../../../pixel-accessor";
import type { Point } from "../../../types";
import type { EwaReversePixelMapper, PartialDerivatives } from "../../EwaReversePixelMapper";
import type { BestFitReversePixelMapper } from "../../BestFitReversePixelMapper";
import type { ForwardPixelMapper } from "../../ForwardPixelMapper";
/**
 * Affine matrix represented by 1-dimension array: [sx, rx, tx, ry, sy, ty].
 */
export type AffineMatrix = [number, number, number, number, number, number];
/**
 * Project coordinates using affine projection matrix.
 *
 * @param x
 * @param y
 * @param matrix
 */
export declare function applyAffineMatrix(x: number, y: number, matrix: AffineMatrix): Point;
/**
 * Returns inverted affine matrix.
 *
 * @param matrix
 *
 * @see https://imagemagick.org/api/MagickCore/distort_8c_source.html#l00095 Inverting affine matrix at ImageMagick source
 */
export declare function invertAffineMatrix(matrix: AffineMatrix): AffineMatrix;
/**
 * Affine distortion.
 *
 * @see https://www.imagemagick.org/Usage/distorts/#affine Affine distortion details at ImageMagick docs
 * @see https://imagemagick.org/api/MagickCore/distort_8c_source.html#l02443 Affine distortion at ImageMagick source
 */
export declare class Affine implements EwaReversePixelMapper, BestFitReversePixelMapper, ForwardPixelMapper {
    readonly matrix: AffineMatrix;
    /**
     * Forward matrix.
     */
    readonly forwardMatrix: AffineMatrix;
    /**
     * @inheritDoc
     */
    readonly isConstantPartialDerivatives = true;
    /**
     * Affine constructor.
     *
     * @param matrix Reverse Affine matrix.
     */
    constructor(matrix: AffineMatrix);
    /**
     * Creates affine distortion using affine matrix.
     *
     * @param matrix Affine projection coefficients: [sx, rx, tx, ry, sy, ty].
     * @see https://imagemagick.org/api/MagickCore/distort_8c_source.html#l00609 Generating inverted affine distortion matrix from forward affine matrix at ImageMagick source
     */
    static fromForwardMatrix(matrix: AffineMatrix): Affine;
    /**
     * @inheritDoc
     */
    reverseMap(x: number, y: number): Point;
    /**
     * @inheritDoc
     */
    getValidity(): 1;
    /**
     * @inheritDoc
     */
    getPartialDerivatives(): PartialDerivatives;
    /**
     * @inheritDoc
     */
    forwardMap(u: number, v: number): Point;
    /**
     * @inheritDoc
     */
    getBestFitViewport(viewport: Viewport): Viewport;
}
