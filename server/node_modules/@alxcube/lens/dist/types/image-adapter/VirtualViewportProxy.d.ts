import { Viewport } from "../pixel-accessor";
import type { Color } from "../types";
import type { ImageAdapter } from "./ImageAdapter";
/**
 * Adds virtual viewport offset support to ImageAdapter.
 */
export declare class VirtualViewportProxy<ResourceType> implements ImageAdapter<ResourceType> {
    private readonly adapter;
    /**
     * @inheritDoc
     */
    readonly width: number;
    /**
     * @inheritDoc
     */
    readonly height: number;
    /**
     * Virtual viewport X offset.
     * @private
     */
    private offsetX;
    /**
     * Virtual viewport Y offset.
     * @private
     */
    private offsetY;
    /**
     * VirtualViewportProxy constructor.
     *
     * @param adapter
     */
    constructor(adapter: ImageAdapter<ResourceType>);
    /**
     * Returns wrapped ImageAdapter.
     */
    getAdapter(): ImageAdapter<ResourceType>;
    /**
     * @inheritDoc
     */
    getPixelColor(x: number, y: number): Color;
    /**
     * @inheritDoc
     */
    setPixelColor(x: number, y: number, color: Color): void;
    /**
     * @inheritDoc
     */
    getViewport(): Viewport;
    /**
     * @inheritDoc
     */
    setViewport(viewport: Viewport): void;
    /**
     * @inheritDoc
     */
    getBackgroundColor(): Color;
    /**
     * @inheritDoc
     */
    setBackgroundColor(color: Color): void;
    /**
     * @inheritDoc
     */
    getAverageColor(): Color;
    /**
     * @inheritDoc
     */
    getQuantumRange(): number;
    /**
     * @inheritDoc
     */
    getBlank(viewport: Viewport): ImageAdapter<ResourceType>;
    /**
     * @inheritDoc
     */
    scale(scale: number): ImageAdapter<ResourceType>;
    /**
     * @inheritDoc
     */
    getResource(): ResourceType;
    /**
     * @inheritDoc
     */
    commit(): void;
}
